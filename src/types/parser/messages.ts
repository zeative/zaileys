import { Readable } from "stream";
import { z } from "zod";

export const MessagesMediaType = {
  text: "text",
  conversation: "text",
  imageMessage: "image",
  contactMessage: "contact",
  locationMessage: "location",
  documentMessage: "document",
  audioMessage: "audio",
  videoMessage: "video",
  protocolMessage: "protocol",
  contactsArrayMessage: "contactsArray",
  highlyStructuredMessage: "highlyStructured",
  sendPaymentMessage: "sendPayment",
  liveLocationMessage: "liveLocation",
  requestPaymentMessage: "requestPayment",
  declinePaymentRequestMessage: "declinePaymentRequest",
  cancelPaymentRequestMessage: "cancelPaymentRequest",
  templateMessage: "template",
  stickerMessage: "sticker",
  groupInviteMessage: "groupInvite",
  templateButtonReplyMessage: "templateButtonReply",
  productMessage: "product",
  deviceSentMessage: "deviceSent",
  listMessage: "list",
  viewOnceMessage: "viewOnce",
  orderMessage: "order",
  listResponseMessage: "listResponse",
  ephemeralMessage: "ephemeral",
  invoiceMessage: "invoice",
  buttonsMessage: "buttons",
  buttonsResponseMessage: "buttonsResponse",
  paymentInviteMessage: "paymentInvite",
  interactiveMessage: "interactive",
  reactionMessage: "reaction",
  stickerSyncRmrMessage: "sticker",
  interactiveResponseMessage: "interactiveResponse",
  pollCreationMessage: "pollCreation",
  pollUpdateMessage: "pollUpdate",
  keepInChatMessage: "keepInChat",
  documentWithCaptionMessage: "document",
  requestPhoneNumberMessage: "requestPhoneNumber",
  viewOnceMessageV2: "viewOnce",
  encReactionMessage: "reaction",
  editedMessage: "text",
  viewOnceMessageV2Extension: "viewOnce",
  pollCreationMessageV2: "pollCreation",
  scheduledCallCreationMessage: "scheduledCallCreation",
  groupMentionedMessage: "groupMentioned",
  pinInChatMessage: "pinInChat",
  pollCreationMessageV3: "pollCreation",
  scheduledCallEditMessage: "scheduledCallEdit",
  ptvMessage: "ptv",
  botInvokeMessage: "botInvoke",
  callLogMesssage: "callLog",
  encCommentMessage: "encComment",
  bcallMessage: "bcall",
  lottieStickerMessage: "lottieSticker",
  eventMessage: "event",
  commentMessage: "comment",
  newsletterAdminInviteMessage: "text",
  extendedTextMessageWithParentKey: "text",
  extendedTextMessage: "text",
  placeholderMessage: "placeholder",
  encEventUpdateMessage: "encEventUpdate",
} as const;

export const MessagesVerifiedPlatformType = {
  whatsapp: "0@s.whatsapp.net",
  meta: "13135550002@s.whatsapp.net",
  chatgpt: "18002428478@s.whatsapp.net",
  copilot: "18772241042@s.whatsapp.net",
  instagram: "447723442971@s.whatsapp.net",
  tiktok: "6285574670498@s.whatsapp.net",
} as const;

export const MessagesEnumType = z.enum([
  "text",
  "text",
  "image",
  "contact",
  "location",
  "document",
  "audio",
  "video",
  "protocol",
  "contactsArray",
  "highlyStructured",
  "sendPayment",
  "liveLocation",
  "requestPayment",
  "declinePaymentRequest",
  "cancelPaymentRequest",
  "template",
  "sticker",
  "groupInvite",
  "templateButtonReply",
  "product",
  "deviceSent",
  "list",
  "viewOnce",
  "order",
  "listResponse",
  "ephemeral",
  "invoice",
  "buttons",
  "buttonsResponse",
  "paymentInvite",
  "interactive",
  "reaction",
  "sticker",
  "interactiveResponse",
  "pollCreation",
  "pollUpdate",
  "keepInChat",
  "document",
  "requestPhoneNumber",
  "viewOnce",
  "reaction",
  "text",
  "viewOnce",
  "pollCreation",
  "scheduledCallCreation",
  "groupMentioned",
  "pinInChat",
  "pollCreation",
  "scheduledCallEdit",
  "ptv",
  "botInvoke",
  "callLog",
  "encComment",
  "bcall",
  "lottieSticker",
  "event",
  "comment",
  "text",
  "text",
  "placeholder",
  "encEventUpdate",
]);
export const MessagesDeviceEnumType = z.enum(["unknown", "android", "ios", "desktop", "web"]);

export const MessagesParserBaseType = z.object({
  chatId: z.string(),
  channelId: z.string(),
  uniqueId: z.string(),
  receiverId: z.string(),
  receiverName: z.string(),
  roomId: z.string(),
  roomName: z.string(),
  senderId: z.string(),
  senderName: z.string(),
  senderDevice: MessagesDeviceEnumType,
  chatType: MessagesEnumType,
  timestamp: z.number(),
  mentions: z.string().array(),
  text: z.string().nullable(),
  links: z.string().array(),
  isPrefix: z.boolean(),
  isFromMe: z.boolean(),
  isTagMe: z.boolean(),
  isGroup: z.boolean(),
  isStory: z.boolean(),
  isViewOnce: z.boolean(),
  isEdited: z.boolean(),
  isDeleted: z.boolean(),
  isPinned: z.boolean(),
  isUnPinned: z.boolean(),
  isChannel: z.boolean(),
  isBroadcast: z.boolean(),
  isEphemeral: z.boolean(),
  isForwarded: z.boolean(),
  citation: z.record(z.string(), z.boolean()).nullable(),
  media: z
    .object({
      buffer: z.function().returns(z.instanceof(Buffer)),
      stream: z.function().returns(z.instanceof(Readable)),
    })
    .passthrough()
    .nullable(),
  message: z.function().returns(z.record(z.string(), z.any())),
});

export const MessagesParserType = MessagesParserBaseType.extend({
  replied: MessagesParserBaseType.nullable(),
});
